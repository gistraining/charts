{{/*
Template collections for autodoc using helm-docs
*/}}

{{/*
Helm-chart docs template version
*/}}
{{- define "chart.templates.version" -}}
# Helm-Docs Chart Template Version
common-v1.0.1
{{- end -}}

{{/*
Default Value Column Render
Input: list
 - the context
 - the value
 - notation type
*/}}
{{- define "chart.valueDefaultColumnRender.default" -}}
{{- $defaultValue := index . 1 -}}
{{- $notationType := index . 2 -}}
```{{ $notationType }}
{{ $defaultValue | trim }}
```
{{- end -}}

{{/*
TPL String Value Column Render
Input: list
 - the value
 - notation type
*/}}
{{- define "chart.valueDefaultColumnRender.tpl" -}}
{{- $context := index . 0 -}}
{{- $defaultValue := index . 1 -}}
{{- $notationType := index . 2 -}}
```yaml
{{ $context.Key }}: |
{{- if $defaultValue -}}
{{- $defaultValue | trim | nindent 2 -}}
{{- else -}}
{{- end -}}
{{ "" }}
```
{{- end -}}

{{/*
Value Column Renderer
Input: map
  .Key
  .NotationType
  .Default
  .AutoDefault
*/}}
{{- define "chart.valueDefaultColumnRender" -}}
{{- $defaultValue := (default .Default .AutoDefault)  -}}
{{- $notationType := .NotationType }}
{{- if (and (hasPrefix "`" $defaultValue) (hasSuffix "`" $defaultValue) ) -}}
{{- $defaultValue = (toPrettyJson (fromJson (trimAll "`" (default .Default .AutoDefault) ) ) ) -}}
{{- $notationType = "json" }}
{{- end -}}
{{- $needCollapsible := (ge (len $defaultValue) 50) }}

{{- if $needCollapsible -}}
<details>
<summary>+Expand</summary>
{{- end }}

{{ "" }}
{{- if eq $notationType "tpl" }}
{{- template "chart.valueDefaultColumnRender.tpl" (list . $defaultValue $notationType) }}
{{- else }}
{{- template "chart.valueDefaultColumnRender.default" (list . $defaultValue $notationType) }}
{{- end }}
{{ "" }}

{{- if $needCollapsible }}
</details>
{{- end -}}

{{- end -}}

{{/*
Type Column Render
Input: map
  .Key
  .NotationType
  .Default
  .AutoDefault
*/}}
{{- define "chart.typeColumnRender" -}}
{{- .Type -}}
{{- end -}}

{{/*
Key Column Render
Input: map
  .Key
  .NotationType
  .Default
  .AutoDefault
*/}}
{{- define  "chart.keyColumnRender" -}}
<a id="{{.Key}}" class="anchor">{{.Key}}</a>
{{- end -}}

{{/*
Description Column Render
Input: map
  .Key
  .NotationType
  .Default
  .AutoDefault
*/}}
{{- define "chart.descriptionColumnRender" -}}
{{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }}
{{- end -}}

{{/*
Chart value Table HTML Section overrides
*/}}
{{- define "chart.valuesTableHtml" -}}
<table height="800px">
	<thead>
		<th>Key</th>
		<th>Type</th>
		<th>Default</th>
		<th>Description</th>
	</thead>
	<tbody>
	{{- range .Values }}
		<tr>
<td>

{{ template "chart.keyColumnRender" . }}

</td>
<td>

{{ template "chart.typeColumnRender" . }}

</td>
<td>

{{ template "chart.valueDefaultColumnRender" . }}

</td>
<td>

{{ template "chart.descriptionColumnRender" . }}

</td>
</tr>
	{{- end }}
	</tbody>
</table>
{{- end -}}

{{/*
Display a nice Repository links
Input: string -- Repository links
*/}}
{{- define "chart.requirementsTable.repositoryColumn" -}}
{{- if hasPrefix "file://" . -}}
{{- $repository := trimPrefix "file://" . -}}
[{{ $repository }}]({{ $repository }})
{{- else }}
[{{ . }}]({{ . }})
{{- end -}}
{{- end -}}

{{/*
Requirements section table
*/}}
{{- define "chart.requirementsTable" -}}
| Repository | Name | Version |
|------------|------|---------|
  {{- range .Dependencies }}
    {{- if .Alias }}
| {{ template "chart.requirementsTable.repositoryColumn" .Repository }} | {{ .Alias }}({{ .Name }}) | {{ .Version }} |
    {{- else }}
| {{ template "chart.requirementsTable.repositoryColumn" .Repository }} | {{ .Name }} | {{ .Version }} |
    {{- end }}
  {{- end }}
{{- end -}}

# -- (object/container-image) Image map
# @section
#
# Official nextcloud image version
# ref: https://hub.docker.com/r/library/nextcloud/tags/
# @notationType -- yaml
image:
  # -- Image registry
  registry: docker.io
  # -- Image repository
  repository: nextcloud
  # -- Image tag
  tag: 21.0.2-apache
  # -- (k8s/containers/image/imagePullPolicy) Image pullPolicy
  pullPolicy: IfNotPresent
  # pullSecrets:
  #   - myRegistrKeySecretName


# This key name is used for service interconnection between subcharts and parent charts.
global:
  # -- (string) You can override release suffix
  nameOverride: ""
  # -- (string) You can override full release name
  fullnameOverride: ""
  # -- (string) Name of shared secret store that will be generated
  sharedSecretName: nextcloud-shared-secret
  # -- (string) Name of shared config store that will be generated
  sharedConfigName: nextcloud-shared-config
  # -- (tpl/string) Name of existing secret
  # @notationType -- tpl
  existingSecret: ""
  # -- (int) Global interconnect information. For database port.
  # @section
  #
  # By default this chart can generate standard postgres chart.
  # So you can leave it as default. If you use external backend,
  # you must provide the value
  databasePort: 5432
  # -- (string) Global interconnect information. For database username backend to connect to.
  # If you use external backend, provide the value
  databaseUsername: nextcloud
  # -- (string) Global interconnect information. For database name to be used
  # by nextcloud
  databaseName: nextcloud
  # -- (object/common.secret) Secret structure for Database Password
  # @notationType -- yaml
  databasePassword:
    # -- (string) Global interconnect information. Specify this password value.
    # @section
    #
    # If not, it will be autogenerated everytime chart upgraded.
    # If you use external backend, you must provide the value
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: postgresql-password
  # -- (string) Default super user admin username
  nextcloudAdminUser: nextcloud-admin
  # -- (object/common.secret) Secret structure for Admin Password
  # @notationType -- yaml
  nextcloudAdminPassword:
    # -- (string) Specify this password value. If not, it will be autogenerated everytime chart upgraded.
    # @section
    #
    # It is recommended to create two superuser account.
    # One account is the service superuser, as described in the [global.nextcloudAdminUser](#global.nextcloudAdminUser),
    # which will have it's password set from here. Other superuser account's
    # and password is set when Nextcloud instance is running (thus saved in
    # the database backend)
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: nextcloud-password
  # -- (string) SMTP user credentials to send email from this Nextcloud instance
  smtpUser:
  # -- (object/common.secret) Secret structure for SMTP Password
  # @notationType -- yaml
  smtpPassword:
    # -- (string) SMTP password credentials to send email from this Nextcloud instance
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: smtp-password
  # -- (object/common.secret) Secret structure for Redis Password
  # @notationType -- yaml
  redisPassword:
    # -- (string) Specify this password value. If not, it will be autogenerated everytime chart upgraded.
    # @section
    #
    # It is recommended to use autogenerated value
    # if you create Redis instance together with this chart. Otherwise,
    # you had to specify password of your Redis instance.
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: redis-password

    # -- (string) Global default storage class
    # @section
    #
    # Will affect both Nextcloud and subcharts.
    # If defined, storageClassName: <storageClass>
    # If set to "-", storageClassName: "", which disables dynamic provisioning
    # If undefined (the default) or set to null, no storageClassName spec is
    # set, choosing the default provisioner.  (gp2 on AWS, standard on
    # GKE, AWS & OpenStack)
    storageClass: null

# -- (string) You can override release suffix
nameOverride: ""
# -- (string) You can override full release name
fullnameOverride: ""
# -- (string) Custom chart label. Will be added to every resource created by this chart.
labels: {}
# -- (string) Custom chart annotations. Will be added to every resource created by this chart.
annotations: {}
# -- (tpl/string) Custom pod label. Will be added to every pod created by this chart
# @notationType -- tpl
podLabels: |
# -- (tpl/string) Custom pod annotations. Will be added to every pod created by this chart
# @notationType -- tpl
podAnnotations: |
# -- (tpl/string) Custom security context because it depends on which http server is used.
# @notationType -- tpl
securityContext: |
  {{- if .Values.nginx.enabled }}
  # Will mount configuration files as www-data (id: 82) for nextcloud
  fsGroup: 82
  {{- else }}
  # Will mount configuration files as www-data (id: 33) for nextcloud
  fsGroup: 33
  {{- end }}

# -- (tpl/array) Extra pod env for Nextcloud container
# @notationType -- tpl
extraPodenv: |

# -- (tpl/object) This will be evaluated as pod spec
# @notationType -- tpl
extraPodSpec: |
  #  nodeSelector:
  #    a.label: value

# -- (tpl/map) Define this for extra secrets to be included in shared-secret secret
# @notationType -- tpl
extraSecret: |
  #  key_1: value_1

# -- (tpl/map) Define this for extra config map to be included in shared-config
# @notationType -- tpl
extraConfigMap: |
  # file_1: conf content

# -- (tpl/list) Define this for extra volume mounts in the pod
# @notationType -- tpl
extraVolumeMounts: |
  # You may potentially mount a config map/secret
  #  - name: external-mounts
  #    mountPath: /external-data
  #    subPath: subfolder
  #    readOnly: true

# -- (tpl/list) Define this for extra volume (in pair with extraVolumeMounts)
# @section
#
# Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
# to NextCloud pods in Kubernetes. This can then be configured in External Storage
# @notationType -- tpl
extraVolume: |
  # You may potentially mount a config map/secret
  #  - name: external-mounts
  #    persistentVolumeClaim:
  #      name: nfs-volume


# Number of replicas to be deployed
replicaCount: 1

# -- (dict) Allowing use of ingress controllers
# @section
#
# ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
# @notationType -- yaml
ingress:
  # -- (bool) Set to true to generate Ingress resource
  enabled: false
  tls:
    # -- (bool) Set to true to enable HTTPS
    enabled: false
    # -- (string) You must provide a secret name where the TLS cert is stored
    secretName: nextcloud-tls

  # -- (tpl/string) Set custom host name. (DNS name convention)
  # if empty, will follow [nextcloud.host](#nextcloud.host) value
  # @notationType -- tpl
  host: |

  # -- (dict) Custom Ingress annotations
  # @section
  #
  # Example:
  #
  # ```
  # nginx.ingress.kubernetes.io/proxy-body-size: 4G
  # kubernetes.io/tls-acme: "true"
  # certmanager.k8s.io/cluster-issuer: letsencrypt-prod
  # nginx.ingress.kubernetes.io/server-snippet: |-
  #   server_tokens off;
  #   proxy_hide_header X-Powered-By;
  #   rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
  #   rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
  #   rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
  #   location = /.well-known/carddav {
  #     return 301 $scheme://$host/remote.php/dav;
  #   }
  #   location = /.well-known/caldav {
  #     return 301 $scheme://$host/remote.php/dav;
  #   }
  #   location = /robots.txt {
  #     allow all;
  #     log_not_found off;
  #     access_log off;
  #   }
  #   location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
  #     deny all;
  #   }
  #   location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
  #     deny all;
  #   }
  # ```
  annotations: {}
  # -- (dict) Custom Ingress labels
  labels: {}


# Allow configuration of lifecycle hooks
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
lifecycle: {}
  # postStartCommand: []
  # preStopCommand: []

# Nextcloud specific settings
nextcloud:
  # -- (string) Nextcloud's trusted hostname.
  # @section
  #
  # Has to be set for production instance
  # because it connects to Ingress name, trusted proxy domain, and URL name.
  host: nextcloud.kube.home
  # -- (string) **Deprecated**. Will be overridden by [global.nextcloudAdminUser](#global.nextcloudAdminUser)
  username: admin
  # -- (string) **Deprecated**. Will be overridden by [global.nextcloudAdminPassword](#global.nextcloudAdminPassword)
  password: changeme
  # -- (int) Trigger update if custom command is used
  update: 0
  # -- (string) nextcloud data dir location
  datadir: /var/www/html/data
  # -- (string) nextcloud db table prefix
  tableprefix:
  persistence:
    subPath:
  # Mail settings
  mail:
    # -- (bool) Set to true to enable mail settings
    enabled: false
    # -- (string) nextcloud mail send from field
    fromAddress: user
    # -- (string) nextcloud mail domain
    domain: domain.com
    # SMTP settings
    smtp:
      # -- (string) SMTP Hostname
      host: domain.com
      # -- (string) SMTP protocol connection
      secure: ssl
      # -- (int) SMTP port
      port: 465
      # -- (string) SMTP authentication method
      authtype: LOGIN
      # -- (string) **Deprecated** SMTP username. Will be overridden by [global.smtpUser](#global.smtpUser)
      name: user
      # -- (string) **Deprecated** SMTP password. Will be overridden by [global.smtpPassword](#global.smtpPassword)
      password: pass
  # -- (dict) PHP Configuration files
  # @section
  #
  # Will be injected in /usr/local/etc/php/conf.d
  # Value is a mapping of filename --> file content
  # To make sure your PHP conf is overriding the default, create a filename
  # with last alphabetical order, like "z-php.ini"
  phpConfigs: {}
  # -- (dict) Default config files
  # @section
  #
  # **IMPORTANT**: Will be used only if you put extra configs, otherwise default will come from nextcloud itself.
  #
  # Default confgurations can be found here: https://github.com/nextcloud/docker/tree/master/16.0/apache/config
  # @notationType -- yaml
  defaultConfigs:
    # -- (bool) To protect /var/www/html/config
    .htaccess: true
    # -- (bool) Redis default configuration
    redis.config.php: true
    # -- (bool) Apache configuration for rewrite urls
    apache-pretty-urls.config.php: true
    # -- (bool) Define APCu as local cache
    apcu.config.php: true
    # -- (bool) Apps directory configs
    apps.config.php: true
    # -- (bool)Used for auto configure database
    autoconfig.php: true
    # -- (bool) SMTP default configuration
    smtp.config.php: true

  # -- (dict) Extra config files created in /var/www/html/config/
  # @section
  #
  # ref: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/config_sample_php_parameters.html#multiple-config-php-file
  #
  # Value is a mapping of filename --> file content
  #
  # For example, to use S3 as primary storage
  #
  # ref: https://docs.nextcloud.com/server/13/admin_manual/configuration_files/primary_storage.html#simple-storage-service-s3
  #
  # ```yaml
  #  configs:
  #    s3.config.php: |-
  #      <?php
  #      $CONFIG = array (
  #        'objectstore' => array(
  #          'class' => '\\OC\\Files\\ObjectStore\\S3',
  #          'arguments' => array(
  #            'bucket'     => 'my-bucket',
  #            'autocreate' => true,
  #            'key'        => 'xxx',
  #            'secret'     => 'xxx',
  #            'region'     => 'us-east-1',
  #            'use_ssl'    => true
  #          )
  #        )
  #      );
  # ```
  configs: {}

  # Strategy used to replace old pods
  # IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    type: Recreate
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0

nginx:
  # -- (bool) Enable nginx server.
  # You need to set an fpm version of the image for nextcloud if you want to use nginx!
  enabled: false
  # -- (object/container-image) Image map for nginx
  # @notationType -- yaml
  image:
    repository: nginx
    tag: alpine
    pullPolicy: IfNotPresent

  config:
    # -- (bool) This generates the default nginx config as per the nextcloud documentation
    default: true
    # -- (tpl/string) Use this key to put your own nginx configuration
    custom: |

  resources: {}

internalDatabase:
  # -- (bool) Set to true to use file-based internal database (SQLite).
  # Only use this for testing purposes.
  enabled: false
  name: nextcloud

# External database configuration
externalDatabase:
  # -- (bool) Set to true to use external database
  enabled: false

  # -- (string) Supported database engines: mysql or postgresql
  type: postgresql

  # -- (string) Database host
  host:

  # -- (string) **Deprecated** Database username. Will be overriden by [global.databaseUsername](#global.databaseUsername)
  user: nextcloud

  # -- (string) **Deprecated** Database password. Will be overriden by [global.databasePassword](#global.databasePassword)
  password:

  # -- (string) **Deprecated** Database name. Will be overriden by [global.databaseName](#global.databaseName)
  database: nextcloud

  ## Use a existing secret
  existingSecret:
    enabled: false
    # secretName: nameofsecret
    # usernameKey: username
    # passwordKey: password

# PostGIS chart configuration
postgis:
  # -- (bool) Enable postgis as database backend by default. Set to false if using different external backend.
  enabled: false

  nameOverride: postgis

  postgresqlDatabase: nextcloud

  # -- (string) Postgres super user account. It can be different than
  # [global.databaseUsername](#global.databaseUsername)
  postgresqlUsername: superuser
  # -- (object/common.secret) Postgres super user password. It can be different than
  # [global.databasePassword](#global.databasePassword)
  # @notationType -- yaml
  postgresqlPassword:
    value:
  # -- (tpl/string) Existing secret to be used
  # @notationType -- tpl
  existingSecret: |

  # -- (tpl/object) Extra config map for postgis to be included.
  # Can be used to pregenerate database and roles for first setup
  # @notationType -- tpl
  extraConfigMap: |
    nextcloud-db.sh: |
      #!/usr/bin/env bash
      DATABASE="{{ .Values.global.databaseName }}"
      # password comes from environment variables, so it can be retrieved from secret
      DATABASE_USER="{{ .Values.global.databaseUsername }}"
      # create database
      su postgres -c "createdb ${DATABASE}"
      # create role
      cat << EOF | su postgres -c "psql"
      CREATE ROLE ${DATABASE_USER};
      EOF
      # modify permissions
      cat << EOF | su postgres -c "psql -d ${DATABASE}"
      -- Create role
      ALTER ROLE ${DATABASE_USER} LOGIN PASSWORD '${DATABASE_PASSWORD}';
      ALTER DATABASE ${DATABASE} OWNER TO ${DATABASE_USER};
      GRANT ALL PRIVILEGES ON DATABASE ${DATABASE} TO ${DATABASE_USER};
      EOF

  # -- (tpl/array) Extra pod env for postgis
  # We expose database password in case we need to pregenerate it
  # @notationType -- tpl
  extraPodEnv: |
    - name: DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: {{ include "common.sharedSecretName" . | quote }}
          key: {{ .Values.global.databasePassword.valueFrom.secretKeyRef.key }}

  # -- (tpl/array) Extra volume declaration for postgis
  # We use extra volume to mount postgis configmap to pregenerate database
  # @notationType -- tpl
  extraVolume: |
    - name: config-volume
      configMap:
        name: {{ template "common.fullname" . }}
        defaultMode: 0755

  # -- (tpl/array) Extra volume mounts for postgis
  # We use extra volume mounts postgis configmap to pregenerate database
  # @notationType -- tpl
  extraVolumeMounts: |
    - mountPath: /docker-entrypoint-initdb.d/nextcloud-db.sh
      subPath: nextcloud-db.sh
      name: config-volume

##
## MariaDB chart configuration
##
mariadb:
  ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: false

  db:
    name: nextcloud
    user: nextcloud
    password: changeme

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 8Gi

redis:
  enabled: false
  usePassword: false
  auth:
    existingSecret: nextcloud-shared-secret
    existingSecretPasswordKey: redis-password


# Cronjob to execute Nextcloud background tasks
# ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#cron-jobs
cronjob:
  # -- (bool) Set to true to use Kubernetes based cronjob to trigger Nextcloud's webcron.
  enabled: false
  # -- (dict) Nexcloud image is used as default but only curl and sh is needed
  # @notationType -- yaml
  image: {}
    # repository: nextcloud
    # tag: 16.0.3-apache
    # pullPolicy: IfNotPresent
    # pullSecrets:
    #   - myRegistrKeySecretName

  # -- (string) Cron schedule.
  # @section
  #
  # Every 15 minutes.
  # Note: Setting this to any any other value than 15 minutes might
  # cause issues with how nextcloud background jobs are executed
  schedule: "*/15 * * * *"
  annotations: {}
  # -- (bool) Set curl's insecure option if you use e.g. self-signed certificates
  curlInsecure: false
  # -- (tpl/string) You can set nextcloud host directly if you want to use
  # in-cluster access
  nextcloudHost: |
  # -- (int) CronJob failedJobsHistoryLimit spec
  failedJobsHistoryLimit: 5
  # -- (int) CronJob successfulJobsHistoryLimit spec
  successfulJobsHistoryLimit: 2
  # -- (dict) If not set, nextcloud deployment one will be set
  # @section
  #
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #
  # ```yaml
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # ```
  # @notationType -- yaml
  resources:

  # -- (tpl/object) This will be evaluated as pod spec
  # @notationType -- tpl
  extraPodSpec: |
    #  nodeSelector:
    #    a.label: value

# Used for Helm test overrides.
# Check the original test manifest to see what it does
test:
  nextcloud:
    insecureHost: true
    host: |
    containers: |

service:
  type: ClusterIP
  port: 8080
  loadBalancerIP: nil
  nodePort: nil

# -- (dict) Enable persistence using Persistent Volume Claims
# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
# @notationType -- yaml
persistence:
  # -- (bool) Set to true to use persistence. By default it is using
  # the default storage class.
  # By default Nextcloud Data is in /var/www/html inside the container
  enabled: false
  annotations: {}
  # -- (string) nextcloud data Persistent Volume Storage Class
  # @section
  #
  # If defined, storageClassName: <storageClass>
  #
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  #
  # If undefined (the default) or set to null, no storageClassName spec is
  # set, choosing the default provisioner.  (gp2 on AWS, standard on
  # GKE, AWS & OpenStack)
  storageClass: null

  # -- (tpl/string) A manually managed Persistent Volume and Claim
  # Requires persistence.enabled: true
  # If defined, PVC must be created manually before volume will be bound
  existingClaim: null
  accessMode: ReadWriteOnce
  size: 8Gi

# -- (dict) Resource allocation
# @section
#
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#
# ```yaml
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi
# ```
# @notationType -- yaml
resources: {}

# -- (tpl/string) Liveness and readiness probe values
# @section
#
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
# Can also be overridden from [extraPodSpec](#extraPodSpec)
#
# ```yaml
# livenessProbe:
#   initialDelaySeconds: 30
#   periodSeconds: 15
#   timeoutSeconds: 5
#   failureThreshold: 3
#   successThreshold: 1
# readinessProbe:
#   initialDelaySeconds: 30
#   periodSeconds: 15
#   timeoutSeconds: 5
#   failureThreshold: 3
#   successThreshold: 1
# ```
# @notationType -- tpl
probe: |


# -- (dict) Enable pod autoscaling using HorizontalPodAutoscaler
# ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
hpa:
  enabled: false
  cputhreshold: 60
  minPods: 1
  maxPods: 10

# Prometheus Exporter / Metrics
# @notationType -- yaml
metrics:
  enabled: false

  replicaCount: 1
  # The metrics exporter needs to know how you serve Nextcloud either http or https
  https: false
  timeout: 5s

  image:
    repository: xperimental/nextcloud-exporter
    tag: v0.3.0
    pullPolicy: IfNotPresent

  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # resources: {}

  ## Metrics exporter pod Annotation and Labels
  # podAnnotations: {}

  # podLabels: {}

  service:
    type: ClusterIP
    ## Use serviceLoadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    # loadBalancerIP:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9205"
    labels: {}

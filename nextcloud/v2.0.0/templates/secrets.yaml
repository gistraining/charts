{{- define "nextcloud.secret" -}}
metadata:
  {{- if .Values.global.sharedSecretName }}
  name: {{ .Values.global.sharedSecretName }}
  {{- end }}
data:
  ## Nextcloud related secret
  {{- if not .Values.global.existingSecret }}
  nextcloud-username: {{ include "nextcloud.username" . | b64enc | quote }}
  {{- $nextcloudPassword := include "nextcloud.password" . }}
  {{ include "common.secretKey" .Values.global.nextcloudAdminPassword | nindent 2 }}: {{ $nextcloudPassword | b64enc | quote }}

  # Nextcloud SMTP secret
    {{- if .Values.nextcloud.mail.enabled }}
  smtp-username: {{ default "" (include "nextcloud.smtp.username") | b64enc | quote }}
  smtp-password: {{ default "" .Values.nextcloud.mail.smtp.password | b64enc | quote }}
    {{- $smtpPassword := include "nextcloud.smtp.password" . }}
  {{ include "common.secretKey" .Values.global.smtpPassword | nindent 2 }}: {{ $smtpPassword | b64enc | quote }}
    {{- end }}
    
  ## Database Connection secret
  {{- $databasePassword := include "common.secretValue" .Values.global.databasePassword -}}
  {{ include "common.secretKey" .Values.global.databasePassword | nindent 2 }}: {{ $databasePassword | b64enc | quote }}

  {{- if .Values.postgis.enabled }}
  {{- $databaseHost := (printf "%s-%s-headless" .Release.Name .Values.postgis.nameOverride) }}
  database-url: {{ printf "postgres://%s:%s@%s:%d/%s" .Values.global.databaseUsername $databasePassword $databaseHost (int .Values.global.databasePort) .Values.global.databaseName | b64enc | quote }}
  {{- end }}

  ## Redis secret
  {{- if .Values.redis.enabled -}}
  {{- $redisPassword := include "common.secretValue" .Values.global.redisPassword -}}
  {{ include "common.secretKey" .Values.global.redisPassword | nindent 2 }}: {{ $redisPassword | b64enc | quote }}
  {{- end -}}

  {{- end }}

  {{- with .Values.extraSecret }}
  {{- tpl . $ | nindent 2 }}
  {{- end }}
{{- end -}}

{{ include "common.secret" (list . "nextcloud.secret") }}
